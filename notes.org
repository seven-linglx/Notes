#+TITLE: 技术笔记
#+STARTUP: INDENT

* Table of Contents :TOC_2_gh:noexport:
- [[#software-tips][Software Tips]]
  - [[#pipenv][pipenv]]
  - [[#pip][pip]]
  - [[#spacemacsdoom-emacs-2018-08-28-二][spacemacs/doom emacs (<2018-08-28 二>)]]
  - [[#org-mode][org-mode]]
  - [[#cmake-2018-08-31-五][cmake (<2018-08-31 五>)]]
  - [[#gccg][gcc/g++]]
  - [[#git-2018-09-01-六][git (<2018-09-01 六>)]]
  - [[#tig-2018-09-06-四][tig (<2018-09-06 四>)]]
  - [[#cygwin][cygwin]]
  - [[#vim][vim]]
  - [[#pycharm][pycharm]]
  - [[#vscode][vscode]]
  - [[#idea][idea]]
  - [[#clion][clion]]
  - [[#zsh][zsh]]
  - [[#命令行工具cli][命令行工具(CLI)]]
- [[#windows][windows]]
  - [[#终端][终端]]
  - [[#配置][配置]]
  - [[#工具][工具]]
- [[#linux--ubuntu][linux & ubuntu]]
  - [[#u-盘-read-only][U 盘 read-only]]
  - [[#将-capslock-设为-ctrl][将 CapsLock 设为 Ctrl]]
  - [[#安装emacs262][安装emacs26.2]]
  - [[#命令][命令]]

* Software Tips
** pipenv
*** install
- pip install pipenv
*** create env in your project dir
- pipenv install
- pipenv --python 3.7
- 修改Pipfile里的pip url
*** activate
- pipenv shell 激活当前pipenv
- exit 退出
- pipenv run 不激活当前pipenv，但以当前pipenv运行脚本
- pipenv --rm 删除当前pipenv
*** install packages
- pipenv install numpy==1.22.11
- pipenv install pytest --dev 只为开发环境安装包
*** ready for pro
- pipenv lock 把当前环境的模块lock住, 它会更新Pipfile.lock文件，该文件是用于生产环境的，你永远不应该编辑它
*** create for pro
- pipenv install --ignore-pipfile 然后只需要把代码和Pipfile.lock放到生产环境，运行下面的代码，就可以
  创建和开发环境一样的环境咯，Pipfile.lock里记录了所有包和子依赖包的确切版本，因此是确定构建
*** create for another dev
- pipenv install --dev 要在另一个开发环境做开发，则将代码和Pipfile复制过去
*** other
- pipenv --envs 打印当前环境pipenv的环境变量
- pipenv --py 打印当前项目使用的python信息
- pipenv graph 打印依赖树图
- pipenv install -r requirements.txt
** pip
+ windows位置%appdata%
** spacemacs/doom emacs (<2018-08-28 二>)
*** 按键说明
**** 功能键
+ C-  意思是按住  Ctrol 键
+ M-   意指  Meta 键 (键盘上若无  Meta 键，则可以  ALT ESC 键来取而代之)
+ DEL  意指退格键 (不是 删除( Delete) key)
+ RET  意指回车键
+ SPC  意指空格键
+ ESC  意指  Escape 键
+ TAB  意指  Tab 键
+ 像 "C-M-" (or "M-C") 这样连在一起的意味着同时按住  Control 和  Meta
*** 查看变量的命令
- 查看变量的值（c-h v），快捷键对应的函数(c-h k)，方便查找函数(c-h f)
*** org中英文对齐
首先设中文字体，添加如下配置
#+begin_src elisp
;;单独设置中文字体，解决有中文是卡顿现象
(dolist (charset '(kana han cjk-misc bopomofo))
  (set-fontset-font (frame-parameter nil 'font) charset
                    (font-spec :family "微软雅黑" :size 16)))
#+end_src
然后使用  SPC z x 来调整字体大小，发现  org-table 里对齐为此
*** clang-format-region
With this integration you can press the bound key and clang-format
will format the current line in NORMAL and INSERT mode or the selected
region in VISUAL mode. The line or region is extended to the next bigger syntactic entity.
*** helm-projectile
- (setq projectile-indexing-method 'native)
- (spacemacs/set-leader-keys "pf" 'counsel-projectile-find-file)
- 在查找文件时直接输入' C:/'，可以直接切换磁盘目录
*** dired-mode
- SPC f j 进入dired模式，其实是打开dired buffer
- M-x dired 选中一个文件夹再回车，进入dired
#+name: dired keymap
- 快捷命令
| 命令    | 作用                                  |
|---------+---------------------------------------|
| +       | 新建一个目录                          |
| C-x C-f | 新建一个文件                          |
| j,k,n,p | 上下移动                              |
| <,>     | 目录行中移动                          |
| ^       | 上一级目录                            |
| g       | 刷新文件列表                          |
| m       | 标记文件或目录（*标）                 |
| d       | flag(D标）                            |
| u       | 取消标记                              |
| x       | 删除D标文件                           |
| D       | 删除*标文件，也可以直接删除文件或目录 |
| C       | 拷贝到...                             |
| R       | 重命名...，移动到...                  |
| w       | 复制文件名                            |
| v       | 预览文件，q退出预览                   |

*** doom-modeline
这个modeline依赖all-the-icons里的字体，从all-the-icons 仓库 clone 下来，windows 要手动安装。其
它可以在 emacs 里直接使用 all-the-icons-font-install 安装.
*** set-face-underline
*** 一些有用命令
+ SPC t i 显示代码缩进线
+ display-fill-column-indicator-mode 显示右边长度限制线
+ prog-mode emacs内置的编程模式
*** 按键映射
#+BEGIN_SRC elisp
(define-key evil-insert-state-map (kbd "C-h") (kbd "<left>"))
(define-key evil-insert-state-map (kbd "C-j") (kbd "<down>"))
(define-key evil-insert-state-map (kbd "C-k") (kbd "<up>"))
(define-key evil-insert-state-map (kbd "C-l") (kbd "<right>"))
#+END_SRC
*** 一些配置
- (setq vc-handled-backends ())
- (setq vc-handled-backends nil)
- (setq create-lockfiles nil) 禁止创建锁定文件
*** 国内源
- 腾讯源 https://mirrors.cloud.tencent.com/help/elpa.html
- 去除spacemacs默认设置的函数、变量名加粗: 鼠标移到想改的地方，M-x customize-face
*** settings
- (add-hook 'window-setup-hook #'toggle-frame-maximized) 最大化
- (add-hook 'window-setup-hook #'toggle-frame-fullscreen) 全屏
- (pushnew! initial-frame-alist '(width . 200) '(height . 55)) 设置窗口大小
- (setq doom-font (font-spec :family "Source Code Pro" :size 15))
*** EMACS字体设置
#+begin_src elisp
(defun set-font (english chinese english-size chinese-size)
  (set-face-attribute 'default nil :font
                      (format   "%s:pixelsize=%d"  english english-size))
  (dolist (charset '(kana han symbol cjk-misc bopomofo))
    (set-fontset-font (frame-parameter nil 'font) charset
                      (font-spec :family chinese :size chinese-size))))

(set-font "Source Code Pro for Powerline" "simsun" 14 14)
#+end_src
*** cc module
- pip install cmake-language-server
- spc h m h 查看cc帮助文档
*** 启动时间
emacs --insecure --timed-requires
** org-mode
*** 超链接
#+begin_src emacs-lisp
[[link][description]]  或者  [[link]]
要修改,在链接处键入C-c C-l
#+end_src
*** 内部链接
#+begin_src emacs-lisp
[[#my-custom-id]]
#+end_src
*** 插入title
+ 先输入#+,再C-M-i
*** 参考资料
[[https://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html][org-mode简明指导]]
*** 显示图片
#+begin_src elisp
[[file:path/to/png]]
C-c C-x C-v
在图片链接上ENTER
#+end_src
*** 自动换行
[[https://emacs-china.org/t/emacs-org-mode/6748/4][参考]]
+ M-x auto-fill-mode ;; (hard linewrap)
+ M-q fill paragraph
+ C-u 80 C-x f 设定每行80字,按M-q更新
+ setq truncate-lines nil ;; org就自动显示换行soft linewrap的效果
+ visual-line-mode
*** 文件内添加目录(内部链接)
+ 直接在目录的地方输入: TOC:或者: TOC_2_gh:或者: TOC_2_gh:noexport:
[[https://github.com/snosov1/toc-org][参考链接:org-toc]]
*** 输入特殊字符
- 输入下划线用  underlined\under == underlined_
- 输入加号用 \plus{}< == +<
- 输入周长公式 \pi{}d
- 中文和英文之间多了空格，可能是因为pangu-space-mode的原因，关掉它就可以了。主要是因为安装了chinese这个layer，把它删除
*** 快捷键
**** Input(org-insert-structure-template)
+ s    #+begin_src ... #+end_src
+ e    #+begin_example ... #+end_example  : 单行的例子以冒号开头
+ q    #+begin_quote ... #+end_quote      通常用于引用，与默认格式相比左右都会留出缩进
+ v    #+begin_verse ... #+end_verse      默认内容不换行，需要留出空行才能换行
+ c    #+begin_center ... #+end_center
+ l    #+begin_latex ... #+end_latex
+ L    #+latex:
+ h    #+begin_html ... #+end_html
+ H    #+html:
+ a    #+begin_ascii ... #+end_ascii
+ A    #+ascii:
+ i    #+index: line
+ I    #+include: line
**** Move
+ gh  outline-up-heading
+ gj  org-forward-heading-same-level
+ gl  outline-next-visible-heading
+ gk  org-backward-heading-same-level
+ M-l org-metaright
+ M-h org-metaleft
+ M-k org-metaup
+ M-j org-metadown
** cmake (<2018-08-31 五>)
*** 获取路径
+ ${PROJECT_SOURCE_DIR}
+ ${CMAKE_CURRENT_SOURCE_DIR}
  - 添加头文件路径 INCLUDE_DIRECTORIES()
*** 编译指令
- cmake -G "MSYS Makefiles" ..
- 生成compile_commands.json文件: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=NO
- 交叉编译器，它有自己的标准库头文件目录,compile_commands.json里没包含
#+begin_src cmake
if(CMAKE_EXPORT_COMPILE_COMMANDS)
  set(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})
endif()
# https://blog.csdn.net/mumu0627/article/details/120053421
#+end_src
** gcc/g++
*** 添加头文件路径,多个就写多个-I
- g++ -I/usr/local/include -I/usr/include
***

** git (<2018-09-01 六>)
*** 配置
**** git config --global push.default simple
这个配置可以让 GIT 在 PUSH 时，只 PUSH 当前的分支
**** git config --global diff.submodule log
**** git config status.submodulesummary 1
**** core.autocrlf
#提交时转换为LF，检出时转换为CRLF
git config --global core.autocrlf true
#提交时转换为LF，检出时不转换
git config --global core.autocrlf input
#提交检出均不转换
git config --global core.autocrlf false
**** core.safecrlf
#拒绝提交包含混合换行符的文件
git config --global core.safecrlf true
#允许提交包含混合换行符的文件
git config --global core.safecrlf false
#提交包含混合换行符的文件时给出警告
git config --global core.safecrlf warn
*** submodule
**** git submodule add url
**** git submodule sync
**** git submodule init
**** git submodule update
*** 本地reset后，造成与远程不同步时处理办法
 git pull --rebase origin master
解决冲突再
 git rebase --continue
*** 修改历史提交的commit信息
- git rebase -i HEAD~3
- 修改pick为edit，保存退出
- git commit --amend
- git rebase --continue
*** git add -p
+ 交互式stage改动,s表示分割现有改动
*** git diff
+ git diff head~1 --name-status
+ git diff HEAD^ --name-only
*** .gitignore
+ !*.py 只保留py文件
*** tips
+ cd `git rev-parse --show-toplevel`
** tig (<2018-09-06 四>)
*** keymap
- [shift + c] switch to corresponding branch
- 在stage页面,按\可以分割改动成多个区域,方便小粒度stage change
*** 中文乱码
1. sudo apt install libncursesw5 libncursesw5-dev //这个可以避免中文乱码
2. 重新更新tig再安装
*** themes
- 在tigrc里添加source ~/.tig/theme.tigrc
** cygwin
*** 安装  gcc/g++编译环境
- cmake
- make
- binutils
- gcc-g++
- mingw-86_64-gcc-g++
- gdb
- gcc-g++-core
*** 指定anaconda路径
export PATH=/cygdrive/c/ProgramData/Anaconda3:$PATH #注意要使用cygdrive/c/来指定磁盘
** vim
*** vim做映射时使用<C-u>做前缀的原因
其实<C-U>的作用就是在command模式中删除所有的文本
*** NERD_commenter
- ,ca在可选的注释方式之间切换，比如C/C++ 的块注释/* */和行注释//
- ,cc注释当前行
- ,c<space> 切换注释/非注释状态
- ,cs 以”性感”的方式注释
- ,cA 在当前行尾添加注释符，并进入Insert模式
- ,cu 取消注释
- ,c$ 从光标开始到行尾注释  ，这个要说说因为c$也是从光标到行尾的快捷键，这个按过逗号（，）要快一点按c$
- 2,cc 光标以下count行添加注释
- 2,cu 光标以下count行取消注释
- 2,cm:光标以下count行添加块注释(2,cm)
- Normal模式下，几乎所有命令前面都可以指定行数
- Visual模式下执行命令，会对选中的特定区块进行注释/反注释
*** 快捷键
+ C-w v 竖向分屏
+ C-w s 横向分屏
+ C-w c 关闭分屏
** pycharm
*** Tips
- 按tab会覆盖后面的内容，enter则是补全代码不覆盖
*** settings
+ 当前行高亮, Caret row
+ hard wrap & virtual guide line(editor -> general -> apperence)
** vscode
**** vim
+ vim.foldfix 以更好方式浏览折叠的代码
**** settings
+ window.restoreWindows为None
** idea
**** ideavim
+ :actionlist
+ :source ~/.ideavimrc
**** settings
+ 修改选中变量高亮的背景颜色 settings -> editor -> general -> code -> identifier under caret
+ 选中内容的背景 settings -> editor -> color scheme -> general -> editor -> selection backgroound
**** keymap
+ ctrl shift enter: 快速在末尾添加分号
**** tips
+ (?is)key1.*?key2 同时搜索同时包含key1和key2,允许换行
** clion
**** tips
+ /** 回车可生成函数doxygen文档
** zsh
+ mv a.txt a.md --> mv a.{txt, md}
+ mkdir abc & cd $_ 上个命令的最后一个参数存在_变量中
** 命令行工具(CLI)
*** bat
- bat --config-file
- bat --generate-config-file
- bat --list-themes
- export BA_CONFIG_PATH=/path/to/bat.conf
- cygwin里使用bat,github.com/sharkdp/bat#cygwin
*** wget
+ wget -no-check-certificat
+
*** curl
+ curl --insecure
* windows
** 终端
先安装了 cygwin
再安装一系列插件：git tig zsh fish 
安装 oh-my-zsh
oh-my-zsh 的插件:zsh-syntax... zsh-suggestion... (bug：直接在 github 上用右键下载，win10 不能识别，要下载全部的库)
oh-my-zsh 的主题，特殊符号不能显示-->又去解决字体问题，下载 nerd 字体，最后从自己电脑复制过去的
在 cygwin 的 minsys 中，中文显示乱码，git 使用也异常（可能是原先 git for windows 中 git 版本与 cygwin 中的 git 版本不兼容造成）
想在 git for windows 的 minsys 中直接使用 cygwin 中的 tmux,zsh，但一直不能识别，不知是不是系统环境变量 PATH 没起作用？
尝试过把 tmux 的文件和依赖直接复制过去，并不行。
把 git for windows 中的 bash,minsys 复制到 cygwin 中，并不能直接运行
zsh 中 git log 显示中文乱码，在 zshrc 中设置 export LESSCHARSET=UTF-8
另一个 windows 体验 linux 的工具 babun, 准备尝试
** 配置
1. 笔记本电脑关闭自带键盘
   - sc config i8042prt start= disabled
   - sc config i8042prt start= auto
** 工具
+ utool
+ switcheroo
+ directory opus
+ listary
* linux & ubuntu
** U 盘 read-only
1) 方法一
#+BEGIN_SRC shell
sudo mount -o remount,rw /dev/sdc
#+END_SRC
2) 方法二
#+BEGIN_SRC shell
sudo umount
sudo dosfsck -a /dev/sdc
#+END_SRC
<<<<<<< HEAD
- chmod -R 777 targetdir 批量递归修改文件权限
** 将 CapsLock 设为 Ctrl
#+BEGIN_SRC shell
vim /etc/default/keyboard
add XKBOPTIONS="ctrl:swapcaps" or XKBOPTIONS="ctrl:nocaps"
run sudo dpkg-reconfigure keyboard-configuration
#+END_SRC

** 安装emacs26.2
- sudo add-apt-repository ppa:kelleyk/emacs
- sudo apt update
- sudo apt install emacs26
** 命令
+ ln -s source target
+ cat source.txt | sort | uniq > target.txt 去除重复的行
+ rename -v 'src' 'tar' * # src.py -> tar.py
+ rename -v 's/src/tar/' * # perl版本
+ 0\1\2分别表示标准输入\标准输出\和标准错误
+ du -h --max-depth=1
+ df -h
+ ps -ef | grep python
+ wc -l `find . -name "*.js"` | tail -n1
